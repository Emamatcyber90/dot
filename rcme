#!/bin/bash

# This script symlinks everything in $FROMPATH (default: ./dotfiles/) to
# $TOPATH (default: $HOME). Anything that would be overwritten is copied into
# $BACKUP (default: $TOPATH/backup/).

# Basically you put your dotfiles in ./dotfiles/, in the same structure they
# were in relative to $HOME. Then if you want to edit your .bashrc (for
# example) you just edit ~/.bashrc, and as it's a symlink it'll actually edit
# dotfiles/.bashrc. Then you can add and commit that change.

: ${TOPATH:="$HOME"} # Where you keep your dotfiles, overwrite if necessary.
: ${BACKUP:="$TOPATH/backup"} # Place to back up old files.
mkdir -p "$BACKUP"

if [ -z "$FROMPATH" ]; then
  cd $(dirname $0)/dotfiles/
else
  cd "$FROMPATH"
fi
: ${FROMPATH:="$PWD"}
printf "Linking from path: $FROMPATH\n\n"

for FILE in $(find . -type f -o -type l | sed 's|./||'); do
  echo "FILE: $FILE"
  mkdir -p "$TOPATH/$(dirname $FILE)"
  if [ -d "$TOPATH/$FILE" ]; then
    echo "$TOPATH/$FILE is a directory! Aborting"
    exit 1
  elif [ -e "$TOPATH/$FILE" -o -L "$TOPATH/$FILE" ]; then
    echo "$TOPATH/$FILE exists, moving to $BACKUP/$FILE"
    mkdir -p "$BACKUP/$(dirname $FILE)"
    mv "$TOPATH/$FILE" "$BACKUP/$FILE"
  fi
    printf "Symlinking $TOPATH/$FILE -> $FROMPATH/$FILE\n"
    ln -s "$FROMPATH/$FILE" "$TOPATH/$FILE"
    echo ""
done

[ "$(ls -A $BACKUP)" ] || rm -r "$BACKUP" # Clean up backup folder if empty
